{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/Project_3_group4-best-group-btw-/src/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nexport default function Chat() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const inputRef = useRef(null);\n\n  function onClickButton() {\n    if (inputRef != null) {\n      const message = inputRef.current.value;\n      setMessages(prevMessages => [...prevMessages, message]);\n      socket.emit('chat', {\n        new_message: message\n      });\n      console.log('I mean it was clicked');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"chatting\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClickButton,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"3MJP/1MJ+cctdQnZ8d16LRK6e3o=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/ec2-user/environment/Project_3_group4-best-group-btw-/src/chat.js"],"names":["React","useState","useRef","useEffect","io","socket","Chat","messages","setMessages","inputRef","onClickButton","message","current","value","prevMessages","emit","new_message","console","log","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,EAAjB;AAEA,eAAe,SAASE,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMQ,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;;AAEA,WAASQ,aAAT,GAAyB;AACrB,QAAID,QAAQ,IAAI,IAAhB,EAAsB;AAClB,YAAME,OAAO,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,KAAjC;AAEAL,MAAAA,WAAW,CAAEM,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkBH,OAAlB,CAAnB,CAAX;AACAN,MAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ,EAAoB;AAAEC,QAAAA,WAAW,EAAGL;AAAhB,OAApB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA,4BACI;AAAO,MAAA,GAAG,EAAET,QAAZ;AAAsB,MAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAKI;AAAA,gBACKH,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAMC,KAAN,kBACV;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA7BuBd,I;;KAAAA,I","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io(); \n\nexport default function Chat() {\n    \n    const [messages, setMessages] = useState([]);\n    const inputRef = useRef(null);\n    \n    function onClickButton() {\n        if (inputRef != null) {\n            const message = inputRef.current.value;\n            \n            setMessages((prevMessages) => [...prevMessages, message]);\n            socket.emit('chat', { new_message : message });\n            console.log('I mean it was clicked');\n        }\n    }\n    \n    return(\n        <div class=\"chatting\">\n            <input ref={inputRef} type=\"text\" />\n                <button type=\"button\" onClick={onClickButton}>\n                    Send Message\n                </button>\n            <ul>\n                {messages.map((item,index) => (\n                    <li>{item}</li>\n                ))}\n            </ul>\n        </div>\n    );\n    \n}"]},"metadata":{},"sourceType":"module"}